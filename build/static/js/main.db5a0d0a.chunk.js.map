{"version":3,"sources":["helpers.js","components/StorePicker.js","components/NotFound.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","notFound","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","Router","exact","path","storePicker","NotFound","render","document","querySelector"],"mappings":"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","file":"static/js/main.db5a0d0a.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n    static propTypes = {\n        history: PropTypes.object\n    };\n\n    goToStore = event => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        // 2. get the text from that input\n        const storeName = this.myInput.current.value;\n        // 3. Change the page to /store/whatever-they-entered\n        this.props.history.push(`/store/${storeName}`);\n    };\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input\n                    type=\"text\"\n                    ref={this.myInput}\n                    required\n                    placeholder=\"Store Name\"\n                    defaultValue={getFunName()}\n                />\n                <button type=\"submit\">Visit Store →</button>\n            </form>\n        );\n    }\n}\n\nexport default StorePicker;\n","import React from \"react\";\n\nconst notFound = () => (\n    <div>\n        <h2>Not Found!!</h2>\n    </div>\n);\n\nexport default notFound;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n    <header className=\"top\">\n        <h1>\n            Catch\n            <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    };\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === \"available\";\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: { enter: 500, exit: 500 }\n        };\n        // Make sure the fish is loaded before we continue!\n        if (!fish) return null;\n\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : \"fish\"} is no longer available\n                    </li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                  classNames=\"count\"\n                  key={count}\n                  timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n              {formatPrice(count * fish.price)}\n              <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n                </li>\n            </CSSTransition>\n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === \"available\";\n            if (isAvailable) {\n                return prevTotal + count * fish.price;\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    };\n\n    createFish = event => {\n        // 1.  stop the form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n        this.props.addFish(fish);\n        // refresh the form\n        event.currentTarget.reset();\n    };\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input\n                    name=\"price\"\n                    ref={this.priceRef}\n                    type=\"text\"\n                    placeholder=\"Price\"\n                />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input\n                    name=\"image\"\n                    ref={this.imageRef}\n                    type=\"text\"\n                    placeholder=\"Image\"\n                />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func\n    };\n    handleChange = event => {\n        // update that fish\n        // 1. Take a copy of the curernt fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    };\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.name}\n                />\n                <input\n                    type=\"text\"\n                    name=\"price\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.price}\n                />\n                <select\n                    type=\"text\"\n                    name=\"status\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.status}\n                >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea\n                    name=\"desc\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.desc}\n                />\n                <input\n                    type=\"text\"\n                    name=\"image\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.image}\n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n            Log In With GitHub\n        </button>\n        <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n            Log In With Twitter\n        </button>\n        <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n            Log In With Facebook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from \"firebase\";\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyDjpxzrYeO6HS-LaIU0J_iz4qSymCJCSAI\",\n    authDomain: \"fish-store-1f62c.firebaseapp.com\",\n    databaseURL: \"https://fish-store-1f62c-default-rtdb.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n// This is a named export\nexport { firebaseApp };\n// this is a default export\nexport default base;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n        addFish: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        });\n    }\n\n    authHandler = async authData => {\n        // 1 .Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        // 2. Claim it if there is no owner\n        if (!store.owner) {\n            // save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        // 3. Set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n    };\n\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    };\n\n    logout = async () => {\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    };\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>;\n\n        // 1. Check if they are logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />;\n        }\n\n        // 2. check if they are not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner!</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        // 3. They must be the owner, just render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm\n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>\n                    Load Sample Fishes\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func,\n        index: PropTypes.string\n    };\n    render() {\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === \"available\";\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button\n                    disabled={!isAvailable}\n                    onClick={() => this.props.addToOrder(this.props.index)}\n                >\n                    {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n                </button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object,\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: \"fishes\"\n        });\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(\n            this.props.match.params.storeId,\n            JSON.stringify(this.state.order)\n        );\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = fish => {\n        // 1. Take a copy of the existing state\n        const fishes = { ...this.state.fishes };\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. Update that state\n        fishes[key] = updatedFish;\n        // 3. Set that to state\n        this.setState({ fishes });\n    };\n\n    deleteFish = (key) => {\n        const fishes = { ...this.state.fishes };\n        fishes[key] = null;\n        this.setState({fishes});\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        delete order[key]\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport storePicker from \"./StorePicker\";\nimport NotFound from \"./NotFound\";\nimport App from \"./App\";\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={storePicker} />\n            <Route exact path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from \"./components/Router\"\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}